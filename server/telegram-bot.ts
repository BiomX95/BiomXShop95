import TelegramBot from 'node-telegram-bot-api';
import { storage } from './storage';
import { diamondPackageTypes } from '../shared/schema';

// –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ –¥–ª—è node-telegram-bot-api
declare module 'node-telegram-bot-api' {
  interface SendMessageOptions {
    reply_markup?: {
      inline_keyboard?: Array<Array<{
        text: string;
        url?: string;
        callback_data?: string;
        web_app?: {
          url: string;
        };
      }>>;
      keyboard?: Array<Array<string>>;
      resize_keyboard?: boolean;
      one_time_keyboard?: boolean;
    };
  }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
if (!process.env.TELEGRAM_BOT_TOKEN) {
  console.error('TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
  process.exit(1);
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–æ—Ç–∞ –±–µ–∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ polling
const token = process.env.TELEGRAM_BOT_TOKEN;
console.log('–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...');

// –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –±–æ—Ç–∞ –±–µ–∑ polling
// –≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫ ETELEGRAM –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
export const bot = new TelegramBot(token, { polling: false });

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–æ—Ç–∞ - –∏–∑–±–µ–≥–∞–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–æ–±—ã—Ç–∏–π, –Ω–µ –æ–ø–∏—Å–∞–Ω–Ω—ã—Ö –≤ —Ç–∏–ø–∞—Ö
if (bot.on) {
  // @ts-ignore - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏, –¥–∞–∂–µ –µ—Å–ª–∏ —Ç–∏–ø –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω –≤ —Ç–∏–ø–∞—Ö
  bot.on('error', (error: any) => {
    if (error && error.code) {
      if (error.code.startsWith('ETELEGRAM')) {
        console.log(`Telegram polling error: ${error.code}. –ë–æ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç —Ä–∞–±–æ—Ç—É.`);
      } else {
        console.error('–û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞:', error);
      }
    } else {
      console.error('–û—à–∏–±–∫–∞ Telegram –±–æ—Ç–∞ –±–µ–∑ –∫–æ–¥–∞:', error);
    }
  });
}

// –ë–∞–∑–æ–≤—ã–π URL –¥–ª—è —Å–∞–π—Ç–∞
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–¥–µ–∂–Ω—ã–π, –ø–æ—Å—Ç–æ—è–Ω–Ω—ã–π URL –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã
// –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—É–±–ª–∏—á–Ω—ã–π URL –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
export const SITE_URL = 'https://telegram-assistant-raatbekxspon.replit.app';

// –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞
export const SHOP_NAME = 'BiomX_Shop';

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const mainMenuKeyboard = {
  reply_markup: {
    keyboard: [
      ['üíé –ö—É–ø–∏—Ç—å –∞–ª–º–∞–∑—ã', 'üéÅ –í–∞—É—á–µ—Ä—ã'],
      ['üõ°Ô∏è –≠–≤–æ-–ø—Ä–æ–ø—É—Å–∫–∏', 'üí¨ –û—Ç–∑—ã–≤—ã'],
      ['üåê –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω', 'üë§ –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏'],
      ['‚ùì –ü–æ–º–æ—â—å']
    ],
    resize_keyboard: true
  }
};

// –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
console.log('–î–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ Telegram Web App —Å –±–æ—Ç–æ–º, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ BotFather –∏ –∫–æ–º–∞–Ω–¥—É /setmenubutton');
console.log(`URL –¥–ª—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ${SITE_URL}`);
console.log(`–í–ê–ñ–ù–û: –í BotFather –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /setmenubutton –∏ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:`);
console.log(`–¢–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏: "BiomX Shop üíé"`);
console.log(`URL: ${SITE_URL}`);

const backToMainMenuKeyboard = {
  reply_markup: {
    keyboard: [['‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é']],
    resize_keyboard: true
  }
};

// –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–æ—Ç–∞
bot.onText(/\/test/, async (msg) => {
  const chatId = msg.chat.id;
  console.log(`–ü–æ–ª—É—á–µ–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}`);
  
  await bot.sendMessage(
    chatId,
    '‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.'
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  const firstName = msg.from?.first_name || '–¥—Ä—É–≥';
  console.log(`–ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}, –∏–º—è: ${firstName}`);
  
  await bot.sendMessage(
    chatId,
    `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üëã\n\n–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ${SHOP_NAME} - –º–∞–≥–∞–∑–∏–Ω –∞–ª–º–∞–∑–æ–≤ Free Fire.\n\n–í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≤—è–∑–∞—Ç—å —Å–≤–æ–π ID –≤ –∏–≥—Ä–µ –∫–æ–º–∞–Ω–¥–æ–π /link ID_–ò–ì–†–´\n\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é:`,
    mainMenuKeyboard
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /link –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏ ID –∏–≥—Ä—ã –∫ —á–∞—Ç—É Telegram
bot.onText(/\/link (.+)/, async (msg, match) => {
  const chatId = msg.chat.id;
  
  if (!match || !match[1]) {
    await bot.sendMessage(
      chatId,
      '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à ID –≤ –∏–≥—Ä–µ:\n/link ID_–ò–ì–†–´',
      backToMainMenuKeyboard
    );
    return;
  }
  
  const gameId = match[1].trim();
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ ID –∏–≥—Ä—ã
  if (!/^\d{5,12}$/.test(gameId)) {
    await bot.sendMessage(
      chatId, 
      '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID –∏–≥—Ä—ã. ID –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Ç 5 –¥–æ 12 —Ü–∏—Ñ—Ä.\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞: /link ID_–ò–ì–†–´',
      backToMainMenuKeyboard
    );
    return;
  }
  
  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–≤—è–∑—ã–≤–∞–Ω–∏–µ –≤ API
    const response = await fetch(`${SITE_URL}/api/telegram/link`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        gameId,
        chatId: chatId.toString()
      })
    });
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    if (response.ok) {
      await bot.sendMessage(
        chatId,
        `‚úÖ –í–∞—à ID –∏–≥—Ä—ã ${gameId} —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ —ç—Ç–æ–º—É —á–∞—Ç—É!\n\n–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å—Ç–∞—Ç—É—Å–µ –ø–ª–∞—Ç–µ–∂–µ–π.`,
        mainMenuKeyboard
      );
    } else {
      const error = await response.text();
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ ID –∏–≥—Ä—ã:', error);
      await bot.sendMessage(
        chatId,
        `‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.`,
        mainMenuKeyboard
      );
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ API:', error);
    await bot.sendMessage(
      chatId,
      `‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`,
      mainMenuKeyboard
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–ö—É–ø–∏—Ç—å –∞–ª–º–∞–∑—ã"
bot.onText(/üíé –ö—É–ø–∏—Ç—å –∞–ª–º–∞–∑—ã/, async (msg) => {
  const chatId = msg.chat.id;
  
  try {
    const packages = await storage.getDiamondPackages();
    const filteredPackages = packages.filter(pkg => pkg.type === diamondPackageTypes.DIAMONDS);
    
    let message = 'üíé –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–∞–∫–µ—Ç—ã –∞–ª–º–∞–∑–æ–≤:\n\n';
    
    filteredPackages.forEach((pkg, index) => {
      message += `${index + 1}. ${pkg.name} - ${pkg.price} ‚ÇΩ\n`;
    });
    
    message += '\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç:';
    
    await bot.sendMessage(chatId, message, {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üåê –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', url: SITE_URL }]
        ]
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–∞–∫–µ—Ç–æ–≤ –∞–ª–º–∞–∑–æ–≤:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∞–∫–µ—Ç–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–í–∞—É—á–µ—Ä—ã"
bot.onText(/üéÅ –í–∞—É—á–µ—Ä—ã/, async (msg) => {
  const chatId = msg.chat.id;
  
  try {
    const packages = await storage.getDiamondPackages();
    const vouchers = packages.filter(pkg => pkg.type === diamondPackageTypes.VOUCHER);
    
    let message = 'üéÅ –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–∞—É—á–µ—Ä—ã:\n\n';
    
    vouchers.forEach((voucher, index) => {
      message += `${index + 1}. ${voucher.name} - ${voucher.price} ‚ÇΩ\n`;
    });
    
    message += '\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç:';
    
    await bot.sendMessage(chatId, message, {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üåê –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', url: SITE_URL }]
        ]
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≤–∞—É—á–µ—Ä–æ–≤:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≤–∞—É—á–µ—Ä–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–≠–≤–æ-–ø—Ä–æ–ø—É—Å–∫–∏"
bot.onText(/üõ°Ô∏è –≠–≤–æ-–ø—Ä–æ–ø—É—Å–∫–∏/, async (msg) => {
  const chatId = msg.chat.id;
  
  try {
    const packages = await storage.getDiamondPackages();
    const evoPasses = packages.filter(pkg => pkg.type === diamondPackageTypes.EVO_PASS);
    
    let message = 'üõ°Ô∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –≠–≤–æ-–ø—Ä–æ–ø—É—Å–∫–∏:\n\n';
    
    evoPasses.forEach((pass, index) => {
      message += `${index + 1}. ${pass.name} - ${pass.price} ‚ÇΩ\n`;
    });
    
    message += '\n–î–ª—è –ø–æ–∫—É–ø–∫–∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç:';
    
    await bot.sendMessage(chatId, message, {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üåê –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', url: SITE_URL }]
        ]
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≠–≤–æ-–ø—Ä–æ–ø—É—Å–∫–æ–≤:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –≠–≤–æ-–ø—Ä–æ–ø—É—Å–∫–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–û—Ç–∑—ã–≤—ã"
bot.onText(/üí¨ –û—Ç–∑—ã–≤—ã/, async (msg) => {
  const chatId = msg.chat.id;
  
  try {
    const reviews = await storage.getReviews();
    
    if (reviews.length === 0) {
      await bot.sendMessage(
        chatId,
        'üí¨ –ü–æ–∫–∞ —á—Ç–æ –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤. –°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º, –∫—Ç–æ –æ—Å—Ç–∞–≤–∏—Ç –æ—Ç–∑—ã–≤ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ!',
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üåê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', url: `${SITE_URL}/#reviews` }]
            ]
          }
        }
      );
      return;
    }
    
    let message = 'üí¨ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –æ—Ç–∑—ã–≤—ã:\n\n';
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –æ—Ç–∑—ã–≤–æ–≤
    const limitedReviews = reviews
      .filter(review => review.isVerified)
      .sort((a, b) => new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime())
      .slice(0, 5);
    
    limitedReviews.forEach((review) => {
      const stars = '‚≠ê'.repeat(review.rating);
      message += `${review.userName}\n${stars}\n"${review.comment}"\n\n`;
    });
    
    message += '–í—ã –º–æ–∂–µ—Ç–µ –æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π –æ—Ç–∑—ã–≤ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ:';
    
    await bot.sendMessage(chatId, message, {
      reply_markup: {
        inline_keyboard: [
          [{ text: 'üåê –û—Å—Ç–∞–≤–∏—Ç—å –æ—Ç–∑—ã–≤', url: `${SITE_URL}/#reviews` }]
        ]
      }
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–∑—ã–≤–æ–≤:', error);
    await bot.sendMessage(chatId, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç–∑—ã–≤–æ–≤. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–ü–æ–º–æ—â—å"
bot.onText(/‚ùì –ü–æ–º–æ—â—å/, async (msg) => {
  const chatId = msg.chat.id;
  
  const helpMessage = "‚ùì –ü–æ–º–æ—â—å –∏ —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:\n\n–ö–∞–∫ —Å–≤—è–∑–∞—Ç—å ID –∏–≥—Ä—ã —Å Telegram?\n–û—Ç–ø—Ä–∞–≤—å—Ç–µ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É: /link ID_–ò–ì–†–´\n–ù–∞–ø—Ä–∏–º–µ—Ä: /link 123456789\n\n–ö–∞–∫ –∫—É–ø–∏—Ç—å –∞–ª–º–∞–∑—ã?\n–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π –ø–∞–∫–µ—Ç –∞–ª–º–∞–∑–æ–≤ –Ω–∞ —Å–∞–π—Ç–µ, —É–∫–∞–∂–∏—Ç–µ ID –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ Free Fire, –≤—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã –∏ –∑–∞–≤–µ—Ä—à–∏—Ç–µ –ø–æ–∫—É–ø–∫—É.\n\n–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á—É –∞–ª–º–∞–∑—ã –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã?\n–û–±—ã—á–Ω–æ –∞–ª–º–∞–∑—ã –∑–∞—á–∏—Å–ª—è—é—Ç—Å—è –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 5-15 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –æ–ø–ª–∞—Ç—ã.\n\n–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥?\n–ü—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–∞–π—Ç–µ –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥ –≤ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø–æ–ª–µ –∏ –Ω–∞–∂–º–∏—Ç–µ \"–ü—Ä–∏–º–µ–Ω–∏—Ç—å\".\n\n–ú–æ–≥—É –ª–∏ —è –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å —Å–≤–æ–π –∑–∞–∫–∞–∑?\n–î–∞, —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ –∑–∞–∫–∞–∑–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã. –¢–∞–∫–∂–µ –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –≤ —Ä–∞–∑–¥–µ–ª–µ \"–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏\".\n\n–ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –∞–ª–º–∞–∑—ã –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏?\n–ï—Å–ª–∏ –∞–ª–º–∞–∑—ã –Ω–µ –ø–æ—Å—Ç—É–ø–∏–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º —á–µ—Ä–µ–∑ —Ä–∞–∑–¥–µ–ª \"–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏\" –Ω–∞ —Å–∞–π—Ç–µ.\n\n–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:\n‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∫–∞—Ä—Ç—ã (Visa, MasterCard)\n‚Ä¢ –≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–µ –∫–æ—à–µ–ª—å–∫–∏ (WebMoney, QIWI)\n‚Ä¢ –ú–æ–±–∏–ª—å–Ω—ã–π –ø–ª–∞—Ç–µ–∂";

  await bot.sendMessage(chatId, helpMessage, {
    reply_markup: {
      inline_keyboard: [
        [{ text: 'üåê –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç', url: SITE_URL }]
      ]
    }
  });
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω"
bot.onText(/üåê –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω/, async (msg) => {
  const chatId = msg.chat.id;
  
  // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ chatId
  try {
    const user = await storage.getUserByTelegramChatId(chatId.toString());
    const gameId = user ? user.gameId : '';
    
    // –°–æ–∑–¥–∞–µ–º URL –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤ Telegram WebApp —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    const webAppUrl = gameId 
      ? `${SITE_URL}?game_id=${gameId}&tg_chat=${chatId}` 
      : `${SITE_URL}?tg_chat=${chatId}`;
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    const message = gameId 
      ? `üì± –ú–∞–≥–∞–∑–∏–Ω –æ—Ç–∫—Ä—ã—Ç –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ —Å ID: ${gameId}` 
      : 'üì± –ü—Ä–∏–≤—è–∂–∏—Ç–µ ID –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /link ID_–ò–ì–†–´ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –º–∞–≥–∞–∑–∏–Ω—É';
    
    console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é WebApp URL: ${webAppUrl}`);
    
    // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ Telegram
    await bot.sendMessage(
      chatId,
      message,
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram', web_app: { url: webAppUrl } }],
            [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ', url: SITE_URL }]
          ]
        }
      }
    );
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    
    // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä tg_chat
    const webAppUrl = `${SITE_URL}?tg_chat=${chatId}`;
    
    await bot.sendMessage(
      chatId,
      'üì± –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω –ø—Ä—è–º–æ –≤ Telegram. –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –ø—Ä–∏–≤—è–∂–∏—Ç–µ ID –∏–≥—Ä—ã: /link ID_–ò–ì–†–´',
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram', web_app: { url: webAppUrl } }],
            [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ', url: SITE_URL }]
          ]
        }
      }
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ "–ú–æ–∏ –ø–æ–∫—É–ø–∫–∏"
bot.onText(/üë§ –ú–æ–∏ –ø–æ–∫—É–ø–∫–∏/, async (msg) => {
  const chatId = msg.chat.id;
  
  // –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ chatId –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è gameId
  try {
    const user = await storage.getUserByTelegramChatId(chatId.toString());
    
    if (user && user.gameId) {
      // –°–æ–∑–¥–∞–µ–º URL —Å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –¥–ª—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –º–æ–∏—Ö –∑–∞–∫–∞–∑–æ–≤
      const webAppUrl = `${SITE_URL}/my-orders?game_id=${user.gameId}&tg_chat=${chatId}`;
      const browserUrl = `${SITE_URL}/my-orders?game_id=${user.gameId}&tg_chat=${chatId}`;
      
      console.log(`–û—Ç–ø—Ä–∞–≤–∫–∞ URL –¥–ª—è –∏—Å—Ç–æ—Ä–∏–∏ –ø–æ–∫—É–ø–æ–∫: ${webAppUrl}`);
      
      await bot.sendMessage(
        chatId,
        `üìä –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫ –¥–ª—è –∞–∫–∫–∞—É–Ω—Ç–∞ —Å ID: ${user.gameId}`,
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram', web_app: { url: webAppUrl } }],
              [{ text: 'üåê –û—Ç–∫—Ä—ã—Ç—å –≤ –±—Ä–∞—É–∑–µ—Ä–µ', url: browserUrl }]
            ]
          }
        }
      );
    } else {
      // –î–∞–∂–µ –µ—Å–ª–∏ –Ω–µ—Ç gameId, –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä tg_chat
      const webAppUrl = `${SITE_URL}/my-orders?tg_chat=${chatId}`;
      
      await bot.sendMessage(
        chatId,
        '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–∫—É–ø–æ–∫ –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–∏–≤—è–∑–∞—Ç—å ID –∏–≥—Ä—ã. –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /link ID_–ò–ì–†–´',
        {
          reply_markup: {
            inline_keyboard: [
              [{ text: 'üì± –ü—Ä–∏–≤—è–∑–∞—Ç—å ID –≤ Telegram', web_app: { url: webAppUrl } }],
              [{ text: 'üåê –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫', url: `${SITE_URL}/my-orders` }]
            ]
          }
        }
      );
    }
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    
    // –î–∞–∂–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ –¥–æ–±–∞–≤–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä tg_chat
    const webAppUrl = `${SITE_URL}/my-orders?tg_chat=${chatId}`;
    
    await bot.sendMessage(
      chatId,
      '–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤–∞—à–∏—Ö –ø–æ–∫—É–ø–æ–∫ –∏ –∏—Ö —Å—Ç–∞—Ç—É—Å–∞, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç:',
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –≤ Telegram', web_app: { url: webAppUrl } }],
            [{ text: 'üåê –ò—Å—Ç–æ—Ä–∏—è –ø–æ–∫—É–ø–æ–∫', url: `${SITE_URL}/my-orders` }]
          ]
        }
      }
    );
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"
bot.onText(/‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é/, (msg) => {
  const chatId = msg.chat.id;
  
  bot.sendMessage(
    chatId,
    '–í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é:',
    mainMenuKeyboard
  );
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ
export async function sendPaymentNotification(userIdOrChatId: string, payment: any) {
  try {
    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º userIdOrChatId –≤ —á–∏—Å–ª–æ–≤–æ–π chatId –¥–ª—è Telegram
    let chatId: number;
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ - –ø—ã—Ç–∞–µ–º—Å—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ —á–∏—Å–ª–æ
    if (/^\d+$/.test(userIdOrChatId)) {
      chatId = parseInt(userIdOrChatId);
    } else {
      console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userIdOrChatId);
      return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–∞–∫–µ—Ç–µ
    const packageInfo = await storage.getDiamondPackage(payment.packageId);
    
    if (!packageInfo) {
      console.error('–ü–∞–∫–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω:', payment.packageId);
      return;
    }
    
    let statusText = '';
    let emoji = '';
    
    switch (payment.status) {
      case 'completed':
        statusText = '–û–ø–ª–∞—á–µ–Ω';
        emoji = '‚úÖ';
        break;
      case 'pending':
        statusText = '–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã';
        emoji = '‚è≥';
        break;
      case 'failed':
        statusText = '–û—à–∏–±–∫–∞ –æ–ø–ª–∞—Ç—ã';
        emoji = '‚ùå';
        break;
      case 'cancelled':
        statusText = '–û—Ç–º–µ–Ω—ë–Ω';
        emoji = 'üö´';
        break;
      default:
        statusText = payment.status;
        emoji = '‚ùì';
    }
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–µ–∑ Markdown —Ä–∞–∑–º–µ—Ç–∫–∏
    let statusMessage = '';
    if (payment.status === 'completed') {
      statusMessage = '–ê–ª–º–∞–∑—ã –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã –Ω–∞ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–∏–Ω—É—Ç.';
    } else if (payment.status === 'pending') {
      statusMessage = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≤–µ—Ä—à–∏—Ç–µ –æ–ø–ª–∞—Ç—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–ª–º–∞–∑–æ–≤.';
    } else {
      statusMessage = '–ü—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.';
    }
    
    const message = `${emoji} –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ #${payment.id}\n\n–¢–æ–≤–∞—Ä: ${packageInfo.name}\n–°—É–º–º–∞: ${payment.amount} ‚ÇΩ\n–°—Ç–∞—Ç—É—Å: ${statusText}\nID –∏–≥—Ä—ã: ${payment.gameId}\n\n${statusMessage}`;
    
    const inlineKeyboard: any = [];
    
    // –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –æ–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –æ–ø–ª–∞—Ç–µ
    if (payment.status === 'pending' && payment.paymentUrl) {
      inlineKeyboard.push([
        { text: 'üí≥ –ü–µ—Ä–µ–π—Ç–∏ –∫ –æ–ø–ª–∞—Ç–µ', url: `${SITE_URL}${payment.paymentUrl}` }
      ]);
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å–∞–π—Ç
    inlineKeyboard.push([
      { text: 'üåê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –Ω–∞ —Å–∞–π—Ç–µ', url: `${SITE_URL}/payment-status/${payment.id}` }
    ]);
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram –±–µ–∑ —Ä–∞–∑–º–µ—Ç–∫–∏
    await bot.sendMessage(chatId, message, {
      reply_markup: {
        inline_keyboard: inlineKeyboard
      }
    });
    
    console.log(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø–ª–∞—Ç–µ–∂–µ #${payment.id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram (chat_id: ${chatId})`);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ:', error);
  }
}

// –î–æ–±–∞–≤–ª—è–µ–º —è–≤–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text?.toLowerCase();
  
  console.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${chatId}: "${text}"`);
  
  // –ï—Å–ª–∏ —ç—Ç–æ –æ–¥–Ω–∞ –∏–∑ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥, –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∞–ª—å—à–µ
  if (!text || 
      text === '/start' || 
      text.includes('–∫—É–ø–∏—Ç—å –∞–ª–º–∞–∑—ã') || 
      text.includes('–≤–∞—É—á–µ—Ä—ã') || 
      text.includes('—ç–≤–æ-–ø—Ä–æ–ø—É—Å–∫–∏') || 
      text.includes('–æ—Ç–∑—ã–≤—ã') || 
      text.includes('–ø–æ–º–æ—â—å') || 
      text.includes('–º–æ–∏ –ø–æ–∫—É–ø–∫–∏') || 
      text.includes('–æ—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω') ||
      text.includes('–Ω–∞–∑–∞–¥ –≤ –º–µ–Ω—é')) {
    console.log(`–≠—Ç–æ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞, –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –¥—Ä—É–≥–∏–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–º`);
    return;
  }
  
  // –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å ID –∏–≥—Ä–æ–∫–∞, –ø—Ä–æ–≤–µ—Ä–∏–º
  if (/^\d{5,12}$/.test(text)) {
    bot.sendMessage(
      chatId,
      `–î–ª—è –ø–æ–∫—É–ø–∫–∏ –∞–ª–º–∞–∑–æ–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç —Å ID ${text} –ø–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ –Ω–∞—à —Å–∞–π—Ç:`,
      {
        reply_markup: {
          inline_keyboard: [
            [{ text: 'üåê –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω', url: `${SITE_URL}?game_id=${text}` }]
          ]
        }
      }
    );
    return;
  }
  
  // –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.sendMessage(
    chatId,
    '–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç—É –∫–æ–º–∞–Ω–¥—É. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –Ω–∏–∂–µ:',
    mainMenuKeyboard
  );
});

console.log('Telegram –±–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω');

export default bot;